/*
 * 
 * All the resources for this project: https://www.hackster.io/Aritro
 * Modified by Aritro Mukherjee
 * 
 * 
 */
 
#include <SPI.h>
#include <MFRC522.h>
#include <Servo.h>  // on inclut la bibliothèque pour piloter un servomoteur
#include <LiquidCrystal_I2C.h>



 
#define SS_PIN 10
#define RST_PIN 9
MFRC522 mfrc522(SS_PIN, RST_PIN); 
Servo monServo;// Create MFRC522 instance.
LiquidCrystal_I2C lcd(0x27,16,2);
 int LED=7;
 int LED1=6;
 int B=5;
 
void setup() 
{
   lcd.init();
 lcd.clear();         
 lcd.backlight();
  Serial.begin(9600);   // Initiate a serial communication
  SPI.begin();      // Initiate  SPI bus
  mfrc522.PCD_Init();   // Initiate MFRC522
  Serial.println("Approximate your card to the reader...");
  Serial.println();
  pinMode(LED,OUTPUT);
  pinMode(LED1,OUTPUT);
  pinMode(B,OUTPUT);
  monServo.attach(3);

}
void loop() 
{
  // Look for new cards
  if ( ! mfrc522.PICC_IsNewCardPresent()) 
  {
    return;
  }
  // Select one of the cards
  if ( ! mfrc522.PICC_ReadCardSerial()) 
  {
    return;
  }
  //Show UID on serial monitor
  Serial.print("UID tag :");
  String content= "";
  byte letter;
  for (byte i = 0; i < mfrc522.uid.size; i++) 
  {
     Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
     Serial.print(mfrc522.uid.uidByte[i], HEX);
     content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
     content.concat(String(mfrc522.uid.uidByte[i], HEX));
  }
  Serial.println();
  Serial.print("Message : ");
  content.toUpperCase();
  if (content.substring(1) == "A3 CA 4E 17") //change here the UID of the card/cards that you want to give access
  {
    digitalWrite(LED,HIGH);
     lcd.setCursor(2,0);   //Set cursor to character 2 on line 0
  lcd.print("Access OKKK!!");
    for (int position = 0; position <=180; position ++){ // on crée une variable position qui prend des valeurs entre 0 à 180 degrés
        monServo.write(position);  // le bras du servomoteur prend la position de la variable position
        delay(5); 
        // on attend 15 millisecondes
    }

    
     delay(1000);
     
     digitalWrite(LED,LOW);
       lcd.clear();  
     
    
      for (int position = 180; position >=0; position --){ // cette fois la variable position passe de 180 à 0°
        monServo.write(position);  // le bras du servomoteur prend la position de la variable position
        delay(5);  // le bras du servomoteur prend la position de la variable position
    }
   
     
  }
 
 else{
     digitalWrite(LED1,HIGH);
     lcd.clear();  
      lcd.setCursor(2,0);   //Set cursor to character 2 on line 0
  lcd.print("Access NOT OKKK!!");
     digitalWrite(B,HIGH);
     delay(50);
     digitalWrite(LED1,LOW);
     digitalWrite(B,LOW);
  }
   lcd.clear();  
} 